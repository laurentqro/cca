---
version: 2
jobs:
  build:
    working_directory: ~/cca
    docker:
      - image: circleci/ruby:2.5.0-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: cca
          RAILS_ENV: test
      - image: postgres:9.6
        environment:
          POSTGRES_USER: cca
          POSTGRES_DB: cca_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      - type: cache-restore
        name: Restore bundle cache
        key: cca-bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle install
          command: bundle check || bundle install

      - type: cache-save
        name: Store bundle cache
        key: cca-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - type: cache-restore
        name: Restore Yarn cache
        key: cca-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - type: cache-save
        name: Store Yarn cache
        key: rails-demo-yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.cache/yarn

      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Set up database
          command: bin/rails db:setup

      - run:
          name: Compile assets
          command: bin/rails webpacker:compile

      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable

      - run:
          name: Run unit tests
          command: bin/rails test

      - run: bin/rails test:system

  deploy:
    docker:
      - image: circleci/ruby:2.5.0
    working_directory: /tmp/cca
    steps:
      - run:
          name: Install deployment dependencies
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade
      - run:
          name: Deploy
          command: |
            eb deploy --profile default

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
